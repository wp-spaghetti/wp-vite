name: CI

on:
  # Run tests on PR
  pull_request:
    branches:
      - main
      - develop
      - 'support/*'

  # Optional: Only for post-merge verification (after PR is already approved).
  # Note: PR merge is technically a "push", so this trigger will fire after successful merges.
  # In a proper PR/GitHub workflow, protected branches should only receive PR merges.
  # This trigger only makes sense for:
  # - Hotfixes that bypass PR workflow in emergencies
  # - Unprotected branches that still accept direct pushes (not recommended)
  # - Post-merge verification (redundant if PR tests passed)
  # Remove this entirely if all branches are properly protected with required PR reviews.
  # push:
  #   branches:
  #     - develop

jobs:
  tests:
    name: Tests (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1', '8.2', '8.3', '8.4']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup PHPUnit config
        run: |
          if [[ "${{ matrix.php }}" == "8.0" ]]; then
            cp phpunit-9.xml.dist phpunit.xml.dist
            echo "Using PHPUnit 9 config for PHP ${{ matrix.php }}"
          elif [[ "${{ matrix.php }}" == "8.1" ]]; then
            cp phpunit-10.xml.dist phpunit.xml.dist
            echo "Using PHPUnit 10 config for PHP ${{ matrix.php }}"
          fi

      - name: Run tests
        run: |
          if [[ "${{ matrix.php }}" == "8.0" ]]; then
            # Run PHPUnit directly for PHP 8.0 to avoid grumphp issues
            vendor/bin/phpunit
          else
            # Use grumphp for other PHP versions
            composer test
          fi

      - name: Run tests with coverage (PHP 8.4)
        if: matrix.php == '8.4'
        run: composer test:coverage
      
      - name: Upload coverage to Codecov
        if: matrix.php == '8.4'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

      - name: Upload coverage to Qlty
        if: matrix.php == '8.4'
        uses: qltysh/qlty@v1
        with:
          coverage_file: ./coverage.xml
        env:
          QLTY_TOKEN: ${{ secrets.QLTY_TOKEN }}

      # Alternative to Qlty
      #- name: Upload coverage to Scrutinizer
      #  if: matrix.php == '8.4'
      #  uses: scrutinizer-ci/ocular@v1
      #  with:
      #    access-token: ${{ secrets.SCRUTINIZER_ACCESS_TOKEN }}
      #    coverage-file: ./coverage.xml

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, intl

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run linters
        run: composer lint

      - name: Run static analysis
        run: composer analysis

      - name: Run code quality checks
        run: composer quality

      - name: Run Qlty code analysis
        uses: qltysh/qlty@v1
        env:
          QLTY_TOKEN: ${{ secrets.QLTY_TOKEN }}

  security:
    name: Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, intl

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run security check
        run: composer security

      # Security Compliance Note for Snyk Action:
      # Snyk requires using full commit SHA instead of version tags or @master/@main 
      # for security compliance and to prevent supply chain attacks.
      # 
      # To update SHA hash:
      # - Visit: https://github.com/snyk/actions/commits/master/
      # - Copy the full 40-character commit SHA from the latest commit
      #
      # SARIF Upload Benefits:
      # - Integrates vulnerability results directly into GitHub's Security tab
      # - Provides detailed vulnerability information in pull request reviews
      # - Enables security-focused code review workflow
      # - Creates security alerts for repository maintainers
      - name: Run Snyk to check for vulnerabilities (PHP)
        continue-on-error: true
        uses: snyk/actions/php@e2221410bff24446ba09102212d8bc75a567237d
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif --file=composer.lock
          
      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
